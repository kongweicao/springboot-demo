<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qingwei.springboot.dao.UserMapper" >
    <resultMap id="BaseResultMap" type="com.qingwei.springboot.model.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="gendar" property="gendar" jdbcType="VARCHAR" />
        <result column="job" property="job" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, user_name, password, email, age, gendar, job, create_date, create_user
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getUser" resultMap="BaseResultMap" parameterType="com.qingwei.springboot.model.User" >
        select
        <include refid="Base_Column_List" />
        from user
        <where>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>

    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.qingwei.springboot.model.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (id, user_name, password,
        email, age, gendar,
        job, create_date, create_user
        )
        values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gendar,jdbcType=VARCHAR},
        #{job,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.qingwei.springboot.model.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="userName != null" >
                user_name,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="age != null" >
                age,
            </if>
            <if test="gendar != null" >
                gendar,
            </if>
            <if test="job != null" >
                job,
            </if>
            <if test="createDate != null" >
                create_date,
            </if>
            <if test="createUser != null" >
                create_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null" >
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null" >
                #{age,jdbcType=INTEGER},
            </if>
            <if test="gendar != null" >
                #{gendar,jdbcType=VARCHAR},
            </if>
            <if test="job != null" >
                #{job,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null" >
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                #{createUser,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.qingwei.springboot.model.User" >
        update user
        <set >
            <if test="userName != null" >
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="age != null" >
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="gendar != null" >
                gendar = #{gendar,jdbcType=VARCHAR},
            </if>
            <if test="job != null" >
                job = #{job,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null" >
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null" >
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.qingwei.springboot.model.User" >
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        gendar = #{gendar,jdbcType=VARCHAR},
        job = #{job,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>